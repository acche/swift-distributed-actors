{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"insecureSerializeNotRegisteredMessages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not set this value to true in production deployments, as it could be used send and deserialize any codable type"},{"type":"text","text":" "},{"type":"text","text":"and the serialization infrastructure would attempt deserializing it, potentially opening up for security risks."}]}],"type":"aside","name":"Warning"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedcluster\/serialization\/settings\/insecureserializenotregisteredmessages"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Serialization\/Settings\/insecureSerializeNotRegisteredMessages","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"When "},{"type":"codeVoice","code":"true"},{"type":"text","text":", all messages are allowed to be sent (serialized, and deserialized) regardless if they were"},{"type":"text","text":" "},{"type":"text","text":"registered with serialization or not. While this setting is true, the system will log a warning about each"},{"type":"text","text":" "},{"type":"text","text":"message type when it is first encountered during the systems operation, and it will suggest registering that type."},{"type":"text","text":" "},{"type":"text","text":"This way one can use this setting in local debugging and quick iteration, and then easily register all necessary types"},{"type":"text","text":" "},{"type":"text","text":"when deploying to production."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"insecureSerializeNotRegisteredMessages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"insecureSerializeNotRegisteredMessages","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:18DistributedCluster13SerializationC8SettingsV38insecureSerializeNotRegisteredMessagesSbvp","modules":[{"name":"DistributedCluster"}]},"hierarchy":{"paths":[["doc:\/\/DistributedCluster\/documentation\/DistributedCluster","doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Serialization","doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Serialization\/Settings"]]},"references":{"doc://DistributedCluster/documentation/DistributedCluster/Serialization/Settings/insecureSerializeNotRegisteredMessages":{"role":"symbol","title":"insecureSerializeNotRegisteredMessages","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"insecureSerializeNotRegisteredMessages"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"When "},{"type":"codeVoice","code":"true"},{"type":"text","text":", all messages are allowed to be sent (serialized, and deserialized) regardless if they were"},{"type":"text","text":" "},{"type":"text","text":"registered with serialization or not. While this setting is true, the system will log a warning about each"},{"type":"text","text":" "},{"type":"text","text":"message type when it is first encountered during the systems operation, and it will suggest registering that type."},{"type":"text","text":" "},{"type":"text","text":"This way one can use this setting in local debugging and quick iteration, and then easily register all necessary types"},{"type":"text","text":" "},{"type":"text","text":"when deploying to production."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Serialization\/Settings\/insecureSerializeNotRegisteredMessages","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster\/serialization\/settings\/insecureserializenotregisteredmessages"},"doc://DistributedCluster/documentation/DistributedCluster/Serialization/Settings":{"role":"symbol","title":"Serialization.Settings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Settings"}],"abstract":[],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Serialization\/Settings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Settings"}],"url":"\/documentation\/distributedcluster\/serialization\/settings"},"doc://DistributedCluster/documentation/DistributedCluster":{"role":"collection","title":"DistributedCluster","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster"},"doc://DistributedCluster/documentation/DistributedCluster/Serialization":{"role":"symbol","title":"Serialization","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Serialization"}],"abstract":[{"type":"text","text":"Actor messaging specialized serialization engine."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Serialization","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Serialization"}],"url":"\/documentation\/distributedcluster\/serialization"}}}