{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterEventStream"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ClusterEventStream"},{"type":"text","text":" is only meant to be used locally and does not buffer or redeliver messages."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedcluster\/clustereventstream"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/DistributedCluster\/Sci"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"ClusterEventStream"},{"type":"text","text":" manages a set of subscribers and forwards every event published to it to"},{"type":"text","text":" "},{"type":"text","text":"all its subscribers. An actor can subscribe\/unsubscribe to the event stream via "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"constructs. Subscribers will be watched and removed in case they terminate."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterEventStream"}],"title":"ClusterEventStream","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:18DistributedCluster0B11EventStreamV","modules":[{"name":"DistributedCluster"}],"navigatorTitle":[{"kind":"identifier","text":"ClusterEventStream"}]},"hierarchy":{"paths":[["doc:\/\/DistributedCluster\/documentation\/DistributedCluster"]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/AsyncIterator"]},{"title":"Instance Methods","identifiers":["doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/makeAsyncIterator()"]},{"title":"Type Aliases","identifiers":["doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/Element"]},{"title":"Default Implementations","identifiers":["doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/AsyncSequence-Implementations"],"generated":true}],"references":{"doc://DistributedCluster/documentation/DistributedCluster":{"role":"collection","title":"DistributedCluster","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster"},"doc://DistributedCluster/documentation/DistributedCluster/ClusterEventStream/AsyncSequence-Implementations":{"role":"collectionGroup","title":"AsyncSequence Implementations","abstract":[],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/AsyncSequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/distributedcluster\/clustereventstream\/asyncsequence-implementations"},"doc://DistributedCluster/documentation/DistributedCluster/ClusterEventStream/Element":{"role":"symbol","title":"ClusterEventStream.Element","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Element"}],"abstract":[],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/Element","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Element"}],"url":"\/documentation\/distributedcluster\/clustereventstream\/element"},"doc://DistributedCluster/documentation/DistributedCluster/ClusterEventStream/makeAsyncIterator()":{"role":"symbol","title":"makeAsyncIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeAsyncIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ClusterEventStream","preciseIdentifier":"s:18DistributedCluster0B11EventStreamV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"AsyncIterator","preciseIdentifier":"s:18DistributedCluster0B11EventStreamV13AsyncIteratorC"}],"abstract":[],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/makeAsyncIterator()","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster\/clustereventstream\/makeasynciterator()"},"doc://DistributedCluster/Sci":{"type":"unresolvable","title":"_Concurrency.AsyncSequence","identifier":"doc:\/\/DistributedCluster\/Sci"},"doc://DistributedCluster/documentation/DistributedCluster/ClusterEventStream/AsyncIterator":{"role":"symbol","title":"ClusterEventStream.AsyncIterator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncIterator"}],"abstract":[],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream\/AsyncIterator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncIterator"}],"url":"\/documentation\/distributedcluster\/clustereventstream\/asynciterator"},"doc://DistributedCluster/documentation/DistributedCluster/ClusterEventStream":{"role":"symbol","title":"ClusterEventStream","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterEventStream"}],"abstract":[{"type":"codeVoice","code":"ClusterEventStream"},{"type":"text","text":" manages a set of subscribers and forwards every event published to it to"},{"type":"text","text":" "},{"type":"text","text":"all its subscribers. An actor can subscribe\/unsubscribe to the event stream via "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"constructs. Subscribers will be watched and removed in case they terminate."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterEventStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterEventStream"}],"url":"\/documentation\/distributedcluster\/clustereventstream"}}}