{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedcluster\/clustersingletonsettings\/buffercapacity"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterSingletonSettings\/bufferCapacity","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Capacity of temporary message buffer in case singleton is unavailable."},{"type":"text","text":" "},{"type":"text","text":"If the buffer becomes full, the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"oldest"}]},{"type":"text","text":" messages would be disposed to make room for the newer messages."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"bufferCapacity","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:18DistributedCluster0B17SingletonSettingsV14bufferCapacitySivp","modules":[{"name":"DistributedCluster"}]},"hierarchy":{"paths":[["doc:\/\/DistributedCluster\/documentation\/DistributedCluster","doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterSingleton","doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterSingletonSettings"]]},"references":{"doc://DistributedCluster/documentation/DistributedCluster/ClusterSingletonSettings":{"role":"symbol","title":"ClusterSingletonSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSingletonSettings"}],"abstract":[{"type":"text","text":"Settings for a "},{"type":"codeVoice","code":"ClusterSingleton"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterSingletonSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSingletonSettings"}],"url":"\/documentation\/distributedcluster\/clustersingletonsettings"},"doc://DistributedCluster/documentation/DistributedCluster/Cluster/MemberStatus/up":{"role":"symbol","title":"Cluster.MemberStatus.up","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"up"}],"abstract":[{"type":"text","text":"Describes a node which at some point was known to the leader and moved to "},{"type":"codeVoice","code":".up"},{"type":"text","text":" "},{"type":"text","text":"by whichever strategy it implements for this. Generally, up members are fully ready"},{"type":"text","text":" "},{"type":"text","text":"members of the cluster and are most likely known to many if not all other nodes in the cluster."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/MemberStatus\/up","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster\/cluster\/memberstatus\/up"},"doc://DistributedCluster/documentation/DistributedCluster/ClusterSingleton":{"role":"symbol","title":"ClusterSingleton","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSingleton"}],"abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"cluster singleton"}]},{"type":"text","text":" is a conceptual distributed actor that is guaranteed to have at-most one"},{"type":"text","text":" "},{"type":"text","text":"instance within the cluster system among all of its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/MemberStatus\/up"},{"type":"text","text":" members."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterSingleton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSingleton"}],"url":"\/documentation\/distributedcluster\/clustersingleton"},"doc://DistributedCluster/documentation/DistributedCluster":{"role":"collection","title":"DistributedCluster","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster"},"doc://DistributedCluster/documentation/DistributedCluster/ClusterSingletonSettings/bufferCapacity":{"role":"symbol","title":"bufferCapacity","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Capacity of temporary message buffer in case singleton is unavailable."},{"type":"text","text":" "},{"type":"text","text":"If the buffer becomes full, the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"oldest"}]},{"type":"text","text":" messages would be disposed to make room for the newer messages."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/ClusterSingletonSettings\/bufferCapacity","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster\/clustersingletonsettings\/buffercapacity"}}}