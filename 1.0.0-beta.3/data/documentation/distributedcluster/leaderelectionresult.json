{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderElectionResult"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Synchronous leader elections are usually implemented by predictably ordering the nodes, e.g. ordering them by address"},{"type":"text","text":" "},{"type":"text","text":"and picking the “lowest”, which is a variant of “ranking” leader election. Asynchronous elections may involve having"},{"type":"text","text":" "},{"type":"text","text":"to reach out to the other members and them performing a “vote” about who shall become the leader. As this involves"},{"type":"text","text":" "},{"type":"text","text":"actor coordination, the result of such election is going to be provided asynchronously."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A change in leadership will result in a "},{"type":"codeVoice","code":"Cluster.LeadershipChange"},{"type":"text","text":" event being emitted in the system’s cluster event stream."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedcluster\/leaderelectionresult"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/LeaderElectionResult","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Result of running a "},{"type":"codeVoice","code":"LeaderElection"},{"type":"text","text":", which may be performed asynchronously (or not)."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderElectionResult"}],"title":"LeaderElectionResult","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:18DistributedCluster20LeaderElectionResultV","modules":[{"name":"DistributedCluster"}],"navigatorTitle":[{"kind":"identifier","text":"LeaderElectionResult"}]},"hierarchy":{"paths":[["doc:\/\/DistributedCluster\/documentation\/DistributedCluster"]]},"references":{"doc://DistributedCluster/documentation/DistributedCluster/LeaderElectionResult":{"role":"symbol","title":"LeaderElectionResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderElectionResult"}],"abstract":[{"type":"text","text":"Result of running a "},{"type":"codeVoice","code":"LeaderElection"},{"type":"text","text":", which may be performed asynchronously (or not)."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/LeaderElectionResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LeaderElectionResult"}],"url":"\/documentation\/distributedcluster\/leaderelectionresult"},"doc://DistributedCluster/documentation/DistributedCluster":{"role":"collection","title":"DistributedCluster","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster"}}}