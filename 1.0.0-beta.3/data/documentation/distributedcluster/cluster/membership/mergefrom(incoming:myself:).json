{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"incoming"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster","preciseIdentifier":"s:18DistributedCluster0B0O","text":"Cluster"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/Membership","preciseIdentifier":"s:18DistributedCluster0B0O10MembershipV","text":"Membership"},{"kind":"text","text":", "},{"kind":"externalParam","text":"myself"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster","preciseIdentifier":"s:18DistributedCluster0B0O","text":"Cluster"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/Node","preciseIdentifier":"s:18DistributedCluster0B0O4NodeV","text":"Node"},{"kind":"text","text":"?) -> ["},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster","preciseIdentifier":"s:18DistributedCluster0B0O","text":"Cluster"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/MembershipChange","preciseIdentifier":"s:18DistributedCluster0B0O16MembershipChangeV","text":"MembershipChange"},{"kind":"text","text":"]"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Otherwise, functions as a normal merge, by moving all members “forward” in their respective lifecycles."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following table illustrates the possible state transitions of a node during a merge:"}]},{"type":"codeListing","syntax":null,"code":["node's status  | \"ahead\" node's status                | resulting node's status","---------------+--------------------------------------|-------------------------"," <none>       -->  [.joining, .up, .leaving]         --> <ahead status>"," <none>       -->  [.down, .removed]                 --> <none>"," [.joining]   -->  [.joining, .up, .leaving, .down]  --> <ahead status>"," [.up]        -->  [.up, .leaving, .down]            --> <ahead status>"," [.leaving]   -->  [.leaving, .down]                 --> <ahead status>"," [.down]      -->  [.down]                           --> <ahead status>"," [.down]      -->  <none> (if some node removed)     --> <none>"," [.down]      -->  <none> (iff myself node removed)  --> .removed"," <any status> -->  [.removed]**                      --> <none>","","* `.removed` is never stored EXCEPT if the `myself` member has been seen removed by other members of the cluster.","** `.removed` should never be gossiped\/incoming within the cluster, but if it were to happen it is treated like a removal.","","Warning: Leaders are not \"merged\", they get elected by each node (!).","","- Returns: any membership changes that occurred (and have affected the current membership)."]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedcluster\/cluster\/membership\/mergefrom(incoming:myself:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/Membership\/mergeFrom(incoming:myself:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Special merge function that only moves members “forward” however never removes them, as removal MUST ONLY be"},{"type":"text","text":" "},{"type":"text","text":"issued specifically by a leader working on the assumption that the "},{"type":"codeVoice","code":"incoming"},{"type":"text","text":" Membership is KNOWN to be “ahead”,"},{"type":"text","text":" "},{"type":"text","text":"and e.g. if any nodes are NOT present in the incoming membership, they shall be considered "},{"type":"codeVoice","code":".removed"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"mergeFrom(incoming:myself:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"incoming"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Cluster","preciseIdentifier":"s:18DistributedCluster0B0O"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Membership","preciseIdentifier":"s:18DistributedCluster0B0O10MembershipV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"myself"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Cluster","preciseIdentifier":"s:18DistributedCluster0B0O"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:18DistributedCluster0B0O4NodeV"},{"kind":"text","text":"?) -> ["},{"kind":"typeIdentifier","text":"Cluster","preciseIdentifier":"s:18DistributedCluster0B0O"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MembershipChange","preciseIdentifier":"s:18DistributedCluster0B0O16MembershipChangeV"},{"kind":"text","text":"]"}],"symbolKind":"method","externalID":"s:18DistributedCluster0B0O10MembershipV9mergeFrom8incoming6myselfSayAC0C6ChangeVGAE_AC4NodeVSgtF","extendedModule":"DistributedCluster","modules":[{"name":"DistributedCluster"}]},"hierarchy":{"paths":[["doc:\/\/DistributedCluster\/documentation\/DistributedCluster","doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/Membership"]]},"references":{"doc://DistributedCluster/documentation/DistributedCluster/Cluster/Membership":{"role":"symbol","title":"Cluster.Membership","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Membership"}],"abstract":[{"type":"text","text":"Represents the set of members of this cluster."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/Membership","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Membership"}],"url":"\/documentation\/distributedcluster\/cluster\/membership"},"doc://DistributedCluster/documentation/DistributedCluster/Cluster/Membership/mergeFrom(incoming:myself:)":{"role":"symbol","title":"mergeFrom(incoming:myself:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"incoming"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Cluster","preciseIdentifier":"s:18DistributedCluster0B0O"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Membership","preciseIdentifier":"s:18DistributedCluster0B0O10MembershipV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"myself"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Cluster","preciseIdentifier":"s:18DistributedCluster0B0O"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:18DistributedCluster0B0O4NodeV"},{"kind":"text","text":"?) -> ["},{"kind":"typeIdentifier","text":"Cluster","preciseIdentifier":"s:18DistributedCluster0B0O"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MembershipChange","preciseIdentifier":"s:18DistributedCluster0B0O16MembershipChangeV"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Special merge function that only moves members “forward” however never removes them, as removal MUST ONLY be"},{"type":"text","text":" "},{"type":"text","text":"issued specifically by a leader working on the assumption that the "},{"type":"codeVoice","code":"incoming"},{"type":"text","text":" Membership is KNOWN to be “ahead”,"},{"type":"text","text":" "},{"type":"text","text":"and e.g. if any nodes are NOT present in the incoming membership, they shall be considered "},{"type":"codeVoice","code":".removed"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/Membership\/mergeFrom(incoming:myself:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster\/cluster\/membership\/mergefrom(incoming:myself:)"},"doc://DistributedCluster/documentation/DistributedCluster":{"role":"collection","title":"DistributedCluster","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster"},"doc://DistributedCluster/documentation/DistributedCluster/Cluster":{"role":"symbol","title":"Cluster","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cluster"}],"abstract":[{"type":"text","text":"Cluster namespace."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cluster"}],"url":"\/documentation\/distributedcluster\/cluster"},"doc://DistributedCluster/documentation/DistributedCluster/Cluster/Node":{"role":"symbol","title":"Cluster.Node","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"unique"}]},{"type":"text","text":" node which includes also the node’s unique "},{"type":"codeVoice","code":"UID"},{"type":"text","text":" which is used to disambiguate"},{"type":"text","text":" "},{"type":"text","text":"multiple incarnations of a system on the same host\/port part – similar to how an "},{"type":"codeVoice","code":"ActorIncarnation"},{"type":"text","text":" "},{"type":"text","text":"is used on the per-actor level."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/Node","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Node"}],"url":"\/documentation\/distributedcluster\/cluster\/node"},"doc://DistributedCluster/documentation/DistributedCluster/Cluster/MembershipChange":{"role":"symbol","title":"Cluster.MembershipChange","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MembershipChange"}],"abstract":[{"type":"text","text":"Represents a change made to a "},{"type":"codeVoice","code":"Membership"},{"type":"text","text":", it can be received from gossip and shall be applied to local memberships,"},{"type":"text","text":" "},{"type":"text","text":"or may originate from local decisions (such as joining or downing)."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Cluster\/MembershipChange","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MembershipChange"}],"url":"\/documentation\/distributedcluster\/cluster\/membershipchange"}}}