{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"required"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedcluster\/receptionist\/register\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Receptionist\/Register\/init(from:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"init(from:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:18DistributedCluster12ReceptionistV8RegisterC4fromAEy_xGs7Decoder_p_tKcfc","modules":[{"name":"DistributedCluster"}]},"hierarchy":{"paths":[["doc:\/\/DistributedCluster\/documentation\/DistributedCluster","doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Receptionist","doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Receptionist\/Register"]]},"references":{"doc://DistributedCluster/documentation/DistributedCluster/Receptionist":{"role":"article","title":"Receptionist","abstract":[{"type":"text","text":"Discovering actors is an important aspect of distributed programming, as it is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"the"}]},{"type":"text","text":" primary way we can discover actors on other nodes,"},{"type":"text","text":" "},{"type":"text","text":"and communicate with them."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Receptionist","kind":"article","type":"topic","url":"\/documentation\/distributedcluster\/receptionist"},"doc://DistributedCluster/documentation/DistributedCluster/Receptionist/Register":{"role":"symbol","title":"Receptionist.Register","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Register"}],"abstract":[{"type":"text","text":"INTERNAL API"},{"type":"text","text":" "},{"type":"text","text":"When sent to receptionist will register the specified "},{"type":"codeVoice","code":"_ActorRef"},{"type":"text","text":" under the given "},{"type":"codeVoice","code":"_Reception.Key"}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Receptionist\/Register","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Register"}],"url":"\/documentation\/distributedcluster\/receptionist\/register"},"doc://DistributedCluster/documentation/DistributedCluster":{"role":"collection","title":"DistributedCluster","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster"},"doc://DistributedCluster/documentation/DistributedCluster/Receptionist/Register/init(from:)":{"role":"symbol","title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[],"identifier":"doc:\/\/DistributedCluster\/documentation\/DistributedCluster\/Receptionist\/Register\/init(from:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedcluster\/receptionist\/register\/init(from:)"}}}